{"version":3,"sources":["Components/Header.js","Components/Category.js","Components/Level.js","Components/Quiz.js","Components/Result.js","Components/QuizDash.js","Components/Dashboard.js","Components/App.js","index.js"],"names":["Header","className","Category","state","categories","fetch","then","res","json","data","setState","trivia_categories","this","map","category","index","props","onClick","addCategory","name","React","Component","Level","event","addLevel","level","to","id","Quiz","handleNext","answers","currentQuestion","prevState","alert","correctAnswer","arrOfIncorrect","questions","incorrect_answers","correctAns","correct_answer","arrOfAllAns","_","uniq","concat","prevProps","questionOnScreen","difficulty","question","answer","i","handleAnswer","handleSubmit","Result","score","result","yourAns","ele","QuizDash","isSubmitted","ans","match","params","results","Dashboard","value","path","exact","component","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.fda5eaad.chunk.js","sourcesContent":["function Header() {\n \n    return (\n        <>\n        <header className=\"text-center py-7 text-4xl\">\n            <h1>QUIZ APP</h1>\n        </header>\n        </>\n    )\n}\n\nexport default Header;","import React from \"react\";\nclass Category extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      categories: null,\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"https://opentdb.com/api_category.php\")\n      .then((res) => res.json())\n      .then((data) => this.setState({ categories: data.trivia_categories }));\n  }\n\n  render() {\n    return (\n      <>\n        <div className=\"background\">\n          <div className=\"text-center\">\n            <h2 className=\"text-2xl py-5 font-bold\">Select Category</h2>\n          </div>\n          {!this.state.categories ? (\n            <h3 className=\"text-center font-bold text-3xl\">Loading...</h3>\n          ) : (\n            <>\n              <div className=\"w-9/12 my-0 mx-auto\">\n                {this.state.categories.map((category,index) => (\n                  <div className={this.props.category === category? \"inline-block each-category hover:bg-red-400 cursor-pointer red\":\"inline-block each-category hover:bg-red-400 cursor-pointer\"} key={index} onClick={()=>this.props.addCategory(category)}>\n                    <h5>{category.name}</h5>\n                  </div>\n                ))}\n              </div>\n            </>\n          )}\n        </div>\n      </>\n    );\n  }\n}\n\nexport default Category;\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nclass Level extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    return (\n      <>\n        <div className=\"background h-screen\">\n          <div className=\"text-center\">\n            <h2 className=\"text-2xl  pt-10 pb-4 font-bold\">Select Difficulty Level</h2>\n          </div>\n          <div className=\" text-center\">\n              <button onClick={(event)=>this.props.addLevel(event,\"easy\")} className={this.props.level === 'easy'?\"btn-level red\":\"btn-level\"}>Easy</button>\n              <button onClick={(event)=>this.props.addLevel(event,\"medium\")} className={this.props.level === 'medium'?\"btn-level red\":\"btn-level\"}>Medium</button>\n              <button onClick={(event)=>this.props.addLevel(event,\"hard\")} className={this.props.level === 'hard'?\"btn-level red\":\"btn-level\"}>Hard</button>\n          </div>\n\n          {this.props.level && this.props.category? (\n            <div className=\"text-center\">\n                <NavLink to={`/quiz/${this.props.category.id}/${this.props.level}`}>\n                    <button className=\"btn-level orange\">Start Quiz</button>\n                </NavLink>\n            </div>\n          ):\"\"}\n        </div>\n      </>\n    );\n  }\n}\n\nexport default Level;\n","import React from \"react\";\nimport _ from \"lodash\";\nclass Quiz extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      currentQuestion: 0,\n      answers: null,\n      correctAnswer: null,\n    };\n  }\n\n  componentDidMount() {\n    let arrOfIncorrect = [\n      ...this.props.questions[this.state.currentQuestion].incorrect_answers,\n    ];\n\n    let correctAns =\n      this.props.questions[this.state.currentQuestion].correct_answer;\n\n    let arrOfAllAns = _.uniq(_.concat(arrOfIncorrect, correctAns));\n\n    this.setState({\n      answers: arrOfAllAns,\n      correctAnswer: correctAns,\n    });\n  }\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.currentQuestion !== this.state.currentQuestion) {\n      let arrOfIncorrect = [\n        ...this.props.questions[this.state.currentQuestion].incorrect_answers,\n      ];\n\n      let correctAns =\n        this.props.questions[this.state.currentQuestion].correct_answer;\n\n      let arrOfAllAns = _.uniq(_.concat(arrOfIncorrect, correctAns));\n\n      this.setState({\n        answers: arrOfAllAns,\n        correctAnswer: correctAns,\n      });\n    }\n  }\n\n  handleNext = ()=>{\n      if(!this.props.answers[this.state.currentQuestion]){\n          alert(`You must enter some answer`)\n      }\n      else{\n          this.setState((prevState)=>{\n              return {\n                  currentQuestion:prevState.currentQuestion + 1\n              }\n          })\n      }\n  }\n\n  render() {\n    let questionOnScreen = this.props.questions[this.state.currentQuestion];\n    return (\n      <>\n        <div className=\"question w-9/12 my-0 mx-auto py-8 text-center\">\n          <h5 className=\"text-center font-bold text-2xl my-3\">\n            Question No-{this.state.currentQuestion + 1}\n          </h5>\n          <h6 className=\"text-center font-bold text-2xl bg-blue-400 rounded-xl p-2 inline-block my-3\">\n            Difficulty Level - {questionOnScreen.difficulty}\n          </h6>\n\n          <div className=\"font-bold text-green-900 text-left mt-10\">\n            <h3 className=\"text-2xl font- ml-5\">\n              Question : {questionOnScreen.question}\n            </h3>\n          </div>\n\n          {this.state.answers ? (\n            <>\n              <ul className=\"mx-auto w-5/6 mb-10 mt-5\">\n                {this.state.answers.map((answer, i) => {\n                  return (\n                    <li\n                      onClick={(event) => {\n                        this.props.handleAnswer(\n                          answer,\n                          this.state.currentQuestion\n                        );\n                      }}\n                      key={i}\n                      className={\n                        this.props.answers[this.state.currentQuestion] ===\n                        answer\n                          ? \"mb-5 border px-3 py-2 rounded-md bg-green-900 hover:bg-green-700 text-white cursor-pointer text-left\"\n                          : \" mb-5 border px-3 py-2 rounded-md bg-green-300 hover:bg-yellow-700 cursor-pointer text-left\"\n                      }\n                    >\n                      {i + 1} : {\"   \" + answer}\n                    </li>\n                  );\n                })}\n              </ul>\n            </>\n          ) : (\n            \"\"\n          )}\n          <div>\n            {this.state.currentQuestion > 8 ? (\n              <div>\n                <button onClick={this.props.handleSubmit} \n                className=\"btn-level orange\">Submit</button>\n              </div>\n            ) : (\n              <button onClick={this.handleNext} className=\"btn-level orange\">Next</button>\n            )}\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default Quiz;\n","import React from 'react'\nimport {NavLink} from 'react-router-dom'\nclass Result extends React.Component{\n    constructor(){\n        super()\n        this.state = {\n            score:null,\n            result:null\n\n        }\n    }\n\n    componentDidMount(){\n        let score = 0;\n        let questions = this.props.questions;\n        let answers = this.props.answers;\n\n        let result  = questions.map((question,i)=>{\n            if(question.correct_answer === answers[i]){\n                score = score + 1\n            }\n\n            let obj = {\n                question:question.question,\n                correct_answer:question.correct_answer,\n                yourAns:answers[i]\n            }\n            return obj;\n        })\n\n        this.setState({\n            result:result,score:score\n        })\n    }\n\n    render(){\n        return (\n            <>\n        <section className=''>\n        <h2 className='text-center font-bold text-2xl mb-10'>\n          Your Score is : <span className=\"text-green-900 font-bold text-2xl\">{this.state.score}</span>\n        </h2>\n\n        {this.state.result ? (\n          <table className=\"border-2 border-gray-500 mt-10 mb-10 w-9/12 mx-auto\">\n            <thead>\n              <tr>\n                <th>Is Correct</th>\n                <th>No.</th>\n                <th>Question</th>\n                <th>Correct Answer</th>\n                <th>Your Answer</th>\n              </tr>\n            </thead>\n            <tbody>\n              {this.state.result.map((ele, i) => {\n                return (\n                  <tr key={i}>\n                    <td className=\"text-center\">\n                      {ele.correct_answer === ele.yourAns ? (\n                        <i className=\"fa fa-check text-green-800 text-4xl font-bold\"></i>\n                      ) : (\n                        \n                        <i className=\"fa fa-circle-xmark text-red-600 text-4xl\"></i>\n                      )}\n                    </td>\n                    <td className=\"text-center\">{i + 1}</td>\n                    <td className=\"text-center\">{ele.question}</td>\n\n                    <td className=\"text-center\">{ele.correct_answer}</td>\n                    <td className=\"text-center\">{ele.yourAns}</td>\n                  </tr>\n                );\n              })}\n            </tbody>\n          </table>\n        ) : (\n          ''\n        )}\n\n        <div className='flex justify-center'>\n          <NavLink to='/' className='px-3 py-2 rounded-md text-white bg-indigo-700 mb-10'>\n            Go To Home\n          </NavLink>\n        </div>\n      </section>\n            </>\n        )\n    }\n}\n\nexport default Result;","import React from \"react\";\nimport Quiz from \"./Quiz\";\nimport Result from './Result'\nimport _ from \"lodash\";\nclass QuizDash extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      questions: null,\n      answers: [],\n      isSubmitted: false,\n    };\n  }\n  componentDidMount() {\n    let category = this.props.match.params.category;\n    let level = this.props.match.params.level;\n    fetch(\n      `https://opentdb.com/api.php?amount=10&category=${category}&difficulty=${level}`\n    )\n      .then((res) => res.json())\n      .then((data) => this.setState({ questions: data.results }));\n  }\n\n  handleSubmit = () => {\n    if (!this.state.answers[9]) {\n      alert(`You must select answer of question`);\n    } else {\n      this.setState((prevState) => {\n        return {\n          isSubmitted: !prevState.isSubmitted,\n        };\n      });\n    }\n  };\n\n  handleAnswer = (ans, currentQuestion) => {\n    if (!this.state.answers[currentQuestion]) {\n      this.setState((prevState) => {\n        let updatedAnswer = _.concat(prevState.answers, ans);\n        return {\n          answers: updatedAnswer,\n        };\n      });\n    }\n  };\n\n  render() {\n    return (\n      <>\n        {this.state.questions && !this.state.isSubmitted ?(\n          <div className=\"background h-screen\">\n            <Quiz\n              questions={this.state.questions}\n              handleAnswer={this.handleAnswer}\n              answers={this.state.answers}\n              handleSubmit={this.handleSubmit}\n            />\n          </div>\n        ) : (\n          \"\"\n        )}\n        {this.state.isSubmitted ? (\n          <div className=\"background h-screen\">\n          <Result\n            answers={this.state.answers}\n            questions={this.state.questions}\n          />\n          </div>\n        ) : (\n          \"\"\n        )}\n      </>\n    );\n  }\n}\n\nexport default QuizDash;\n","import React from 'react'\nimport Header from './Header'\nimport Category from './Category';\nimport Level from './Level'\nimport QuizDash from './QuizDash'\nimport {BrowserRouter,Route} from 'react-router-dom'\nclass Dashboard extends React.Component{\n    constructor(){\n        super()\n        this.state = {\n            category:null,\n            level:null\n        }\n    }\n\n    addCategory = (value)=>{\n        this.setState({\n            category:value\n        })\n    }\n    addLevel = (event,value)=>{\n        this.setState({\n            level:value\n        })\n    }\n    render(){\n        return (\n            <>\n            <Header/>\n            <BrowserRouter>\n            <Route path=\"/\" exact>\n            <Category addCategory={this.addCategory} category={this.state.category}/>\n            <Level addLevel={this.addLevel} level={this.state.level} category={this.state.category}/>\n            </Route>\n            <Route path=\"/quiz/:category/:level\" component={QuizDash}>\n\n            </Route>\n            </BrowserRouter>\n            </>\n        )\n    }\n}\n\nexport default Dashboard","import Dashboard from './Dashboard'\nfunction App(params) {\n    return (\n        <>\n        <Dashboard/>\n        </>\n    )\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './Components/App';\n\nReactDOM.render(<App />,\n  document.getElementById('root')\n);"],"sourceRoot":""}