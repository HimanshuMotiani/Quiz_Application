{"ast":null,"code":"import _classCallCheck from\"/Users/apple/Documents/AltCampusRepository/react/Quiz_Application/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";import _createClass from\"/Users/apple/Documents/AltCampusRepository/react/Quiz_Application/node_modules/@babel/runtime/helpers/esm/createClass.js\";import _inherits from\"/Users/apple/Documents/AltCampusRepository/react/Quiz_Application/node_modules/@babel/runtime/helpers/esm/inherits.js\";import _createSuper from\"/Users/apple/Documents/AltCampusRepository/react/Quiz_Application/node_modules/@babel/runtime/helpers/esm/createSuper.js\";import React from\"react\";import Quiz from\"./Quiz\";import Result from'./Result';import _ from\"lodash\";import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var QuizDash=/*#__PURE__*/function(_React$Component){_inherits(QuizDash,_React$Component);var _super=_createSuper(QuizDash);function QuizDash(){var _this;_classCallCheck(this,QuizDash);_this=_super.call(this);_this.handleSubmit=function(){if(!_this.state.answers[9]){alert(\"You must select answer of question\");}else{_this.setState(function(prevState){return{isSubmitted:!prevState.isSubmitted};});}};_this.handleAnswer=function(ans,currentQuestion){if(!_this.state.answers[currentQuestion]){_this.setState(function(prevState){var updatedAnswer=_.concat(prevState.answers,ans);return{answers:updatedAnswer};});}};_this.state={questions:null,answers:[],isSubmitted:false};return _this;}_createClass(QuizDash,[{key:\"componentDidMount\",value:function componentDidMount(){var _this2=this;var category=this.props.match.params.category;var level=this.props.match.params.level;fetch(\"https://opentdb.com/api.php?amount=10&category=\".concat(category,\"&difficulty=\").concat(level)).then(function(res){return res.json();}).then(function(data){return _this2.setState({questions:data.results});});}},{key:\"render\",value:function render(){return/*#__PURE__*/_jsxs(_Fragment,{children:[this.state.questions&&!this.state.isSubmitted?/*#__PURE__*/_jsx(\"div\",{className:\"background h-screen\",children:/*#__PURE__*/_jsx(Quiz,{questions:this.state.questions,handleAnswer:this.handleAnswer,answers:this.state.answers,handleSubmit:this.handleSubmit})}):\"\",this.state.isSubmitted?/*#__PURE__*/_jsx(\"div\",{className:\"background h-screen\",children:/*#__PURE__*/_jsx(Result,{answers:this.state.answers,questions:this.state.questions})}):\"\"]});}}]);return QuizDash;}(React.Component);export default QuizDash;","map":{"version":3,"sources":["/Users/apple/Documents/AltCampusRepository/react/Quiz_Application/src/Components/QuizDash.js"],"names":["React","Quiz","Result","_","QuizDash","handleSubmit","state","answers","alert","setState","prevState","isSubmitted","handleAnswer","ans","currentQuestion","updatedAnswer","concat","questions","category","props","match","params","level","fetch","then","res","json","data","results","Component"],"mappings":"4kBAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,IAAP,KAAiB,QAAjB,CACA,MAAOC,CAAAA,MAAP,KAAmB,UAAnB,CACA,MAAOC,CAAAA,CAAP,KAAc,QAAd,C,gJACMC,CAAAA,Q,gHACJ,mBAAc,0CACZ,wBADY,MAkBdC,YAlBc,CAkBC,UAAM,CACnB,GAAI,CAAC,MAAKC,KAAL,CAAWC,OAAX,CAAmB,CAAnB,CAAL,CAA4B,CAC1BC,KAAK,sCAAL,CACD,CAFD,IAEO,CACL,MAAKC,QAAL,CAAc,SAACC,SAAD,CAAe,CAC3B,MAAO,CACLC,WAAW,CAAE,CAACD,SAAS,CAACC,WADnB,CAAP,CAGD,CAJD,EAKD,CACF,CA5Ba,OA8BdC,YA9Bc,CA8BC,SAACC,GAAD,CAAMC,eAAN,CAA0B,CACvC,GAAI,CAAC,MAAKR,KAAL,CAAWC,OAAX,CAAmBO,eAAnB,CAAL,CAA0C,CACxC,MAAKL,QAAL,CAAc,SAACC,SAAD,CAAe,CAC3B,GAAIK,CAAAA,aAAa,CAAGZ,CAAC,CAACa,MAAF,CAASN,SAAS,CAACH,OAAnB,CAA4BM,GAA5B,CAApB,CACA,MAAO,CACLN,OAAO,CAAEQ,aADJ,CAAP,CAGD,CALD,EAMD,CACF,CAvCa,CAEZ,MAAKT,KAAL,CAAa,CACXW,SAAS,CAAE,IADA,CAEXV,OAAO,CAAE,EAFE,CAGXI,WAAW,CAAE,KAHF,CAAb,CAFY,aAOb,C,sDACD,4BAAoB,iBAClB,GAAIO,CAAAA,QAAQ,CAAG,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBH,QAAvC,CACA,GAAII,CAAAA,KAAK,CAAG,KAAKH,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,KAApC,CACAC,KAAK,0DAC+CL,QAD/C,wBACsEI,KADtE,EAAL,CAGGE,IAHH,CAGQ,SAACC,GAAD,QAASA,CAAAA,GAAG,CAACC,IAAJ,EAAT,EAHR,EAIGF,IAJH,CAIQ,SAACG,IAAD,QAAU,CAAA,MAAI,CAAClB,QAAL,CAAc,CAAEQ,SAAS,CAAEU,IAAI,CAACC,OAAlB,CAAd,CAAV,EAJR,EAKD,C,sBAyBD,iBAAS,CACP,mBACE,2BACG,KAAKtB,KAAL,CAAWW,SAAX,EAAwB,CAAC,KAAKX,KAAL,CAAWK,WAApC,cACC,YAAK,SAAS,CAAC,qBAAf,uBACE,KAAC,IAAD,EACE,SAAS,CAAE,KAAKL,KAAL,CAAWW,SADxB,CAEE,YAAY,CAAE,KAAKL,YAFrB,CAGE,OAAO,CAAE,KAAKN,KAAL,CAAWC,OAHtB,CAIE,YAAY,CAAE,KAAKF,YAJrB,EADF,EADD,CAUC,EAXJ,CAaG,KAAKC,KAAL,CAAWK,WAAX,cACC,YAAK,SAAS,CAAC,qBAAf,uBACA,KAAC,MAAD,EACE,OAAO,CAAE,KAAKL,KAAL,CAAWC,OADtB,CAEE,SAAS,CAAE,KAAKD,KAAL,CAAWW,SAFxB,EADA,EADD,CAQC,EArBJ,GADF,CA0BD,C,sBArEoBjB,KAAK,CAAC6B,S,EAwE7B,cAAezB,CAAAA,QAAf","sourcesContent":["import React from \"react\";\nimport Quiz from \"./Quiz\";\nimport Result from './Result'\nimport _ from \"lodash\";\nclass QuizDash extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      questions: null,\n      answers: [],\n      isSubmitted: false,\n    };\n  }\n  componentDidMount() {\n    let category = this.props.match.params.category;\n    let level = this.props.match.params.level;\n    fetch(\n      `https://opentdb.com/api.php?amount=10&category=${category}&difficulty=${level}`\n    )\n      .then((res) => res.json())\n      .then((data) => this.setState({ questions: data.results }));\n  }\n\n  handleSubmit = () => {\n    if (!this.state.answers[9]) {\n      alert(`You must select answer of question`);\n    } else {\n      this.setState((prevState) => {\n        return {\n          isSubmitted: !prevState.isSubmitted,\n        };\n      });\n    }\n  };\n\n  handleAnswer = (ans, currentQuestion) => {\n    if (!this.state.answers[currentQuestion]) {\n      this.setState((prevState) => {\n        let updatedAnswer = _.concat(prevState.answers, ans);\n        return {\n          answers: updatedAnswer,\n        };\n      });\n    }\n  };\n\n  render() {\n    return (\n      <>\n        {this.state.questions && !this.state.isSubmitted ?(\n          <div className=\"background h-screen\">\n            <Quiz\n              questions={this.state.questions}\n              handleAnswer={this.handleAnswer}\n              answers={this.state.answers}\n              handleSubmit={this.handleSubmit}\n            />\n          </div>\n        ) : (\n          \"\"\n        )}\n        {this.state.isSubmitted ? (\n          <div className=\"background h-screen\">\n          <Result\n            answers={this.state.answers}\n            questions={this.state.questions}\n          />\n          </div>\n        ) : (\n          \"\"\n        )}\n      </>\n    );\n  }\n}\n\nexport default QuizDash;\n"]},"metadata":{},"sourceType":"module"}