{"ast":null,"code":"var _jsxFileName = \"/Users/apple/Documents/AltCampusRepository/react/Quiz_Application/src/Components/Quiz.js\";\nimport React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport _ from \"lodash\";\nimport PreviousMap from \"postcss/lib/previous-map\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass Quiz extends React.Component {\n  constructor() {\n    super();\n\n    this.handleNext = () => {\n      if (!this.props.answers[this.state.currentQuestion]) {\n        alert(`You must enter some answer`);\n      } else {\n        this.setState(prevState => {\n          return {\n            currentQuestion: prevState.currentQuestion + 1\n          };\n        });\n      }\n    };\n\n    this.state = {\n      currentQuestion: 0,\n      answers: null,\n      correctAnswer: null\n    };\n  }\n\n  componentDidMount() {\n    let arrOfIncorrect = [...this.props.questions[this.state.currentQuestion].incorrect_answers];\n    let correctAns = this.props.questions[this.state.currentQuestion].correct_answer;\n\n    let arrOfAllAns = _.uniq(_.concat(arrOfIncorrect, correctAns));\n\n    this.setState({\n      answers: arrOfAllAns,\n      correctAnswer: correctAns\n    });\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.currentQuestion !== this.state.currentQuestion) {\n      let arrOfIncorrect = [...this.props.questions[this.state.currentQuestion].incorrect_answers];\n      let correctAns = this.props.questions[this.state.currentQuestion].correct_answer;\n\n      let arrOfAllAns = _.uniq(_.concat(arrOfIncorrect, correctAns));\n\n      this.setState({\n        answers: arrOfAllAns,\n        correctAnswer: correctAns\n      });\n    }\n  }\n\n  render() {\n    let questionOnScreen = this.props.questions[this.state.currentQuestion];\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"question w-9/12 my-0 mx-auto py-8 text-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n          className: \"text-center font-bold text-2xl my-3\",\n          children: [\"Question No-\", this.state.currentQuestion + 1]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n          className: \"text-center font-bold text-2xl bg-blue-400 rounded-xl p-2 inline-block my-3\",\n          children: [\"Difficulty Level - \", questionOnScreen.difficulty]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"font-bold text-green-900 text-left mt-10\",\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"text-2xl font- ml-5\",\n            children: [\"Question : \", questionOnScreen.question]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), this.state.answers ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"mx-auto w-5/6 mb-10 mt-5\",\n            children: this.state.answers.map((answer, i) => {\n              return /*#__PURE__*/_jsxDEV(\"li\", {\n                onClick: event => {\n                  this.props.handleAnswer(answer, this.state.currentQuestion);\n                },\n                className: this.props.answers[this.state.currentQuestion] === answer ? \"mb-5 border px-3 py-2 rounded-md bg-green-900 hover:bg-green-700 text-white cursor-pointer text-left\" : \" mb-5 border px-3 py-2 rounded-md bg-green-300 hover:bg-yellow-700 cursor-pointer text-left\",\n                children: [i + 1, \" : \", \"   \" + answer]\n              }, i, true, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 21\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 15\n          }, this)\n        }, void 0, false) : \"\", /*#__PURE__*/_jsxDEV(\"div\", {\n          children: this.state.currentQuestion > 8 ? /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: this.props.handleSubmit,\n              className: \"btn-level orange\",\n              children: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: this.handleNext,\n            className: \"btn-level orange\",\n            children: \"Next\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)\n    }, void 0, false);\n  }\n\n}\n\nexport default Quiz;","map":{"version":3,"sources":["/Users/apple/Documents/AltCampusRepository/react/Quiz_Application/src/Components/Quiz.js"],"names":["React","NavLink","_","PreviousMap","Quiz","Component","constructor","handleNext","props","answers","state","currentQuestion","alert","setState","prevState","correctAnswer","componentDidMount","arrOfIncorrect","questions","incorrect_answers","correctAns","correct_answer","arrOfAllAns","uniq","concat","componentDidUpdate","prevProps","render","questionOnScreen","difficulty","question","map","answer","i","event","handleAnswer","handleSubmit"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport _ from \"lodash\";\nimport PreviousMap from \"postcss/lib/previous-map\";\nclass Quiz extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      currentQuestion: 0,\n      answers: null,\n      correctAnswer: null,\n    };\n  }\n\n  componentDidMount() {\n    let arrOfIncorrect = [\n      ...this.props.questions[this.state.currentQuestion].incorrect_answers,\n    ];\n\n    let correctAns =\n      this.props.questions[this.state.currentQuestion].correct_answer;\n\n    let arrOfAllAns = _.uniq(_.concat(arrOfIncorrect, correctAns));\n\n    this.setState({\n      answers: arrOfAllAns,\n      correctAnswer: correctAns,\n    });\n  }\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.currentQuestion !== this.state.currentQuestion) {\n      let arrOfIncorrect = [\n        ...this.props.questions[this.state.currentQuestion].incorrect_answers,\n      ];\n\n      let correctAns =\n        this.props.questions[this.state.currentQuestion].correct_answer;\n\n      let arrOfAllAns = _.uniq(_.concat(arrOfIncorrect, correctAns));\n\n      this.setState({\n        answers: arrOfAllAns,\n        correctAnswer: correctAns,\n      });\n    }\n  }\n\n  handleNext = ()=>{\n      if(!this.props.answers[this.state.currentQuestion]){\n          alert(`You must enter some answer`)\n      }\n      else{\n          this.setState((prevState)=>{\n              return {\n                  currentQuestion:prevState.currentQuestion + 1\n              }\n          })\n      }\n  }\n\n  render() {\n    let questionOnScreen = this.props.questions[this.state.currentQuestion];\n    return (\n      <>\n        <div className=\"question w-9/12 my-0 mx-auto py-8 text-center\">\n          <h5 className=\"text-center font-bold text-2xl my-3\">\n            Question No-{this.state.currentQuestion + 1}\n          </h5>\n          <h6 className=\"text-center font-bold text-2xl bg-blue-400 rounded-xl p-2 inline-block my-3\">\n            Difficulty Level - {questionOnScreen.difficulty}\n          </h6>\n\n          <div className=\"font-bold text-green-900 text-left mt-10\">\n            <h3 className=\"text-2xl font- ml-5\">\n              Question : {questionOnScreen.question}\n            </h3>\n          </div>\n\n          {this.state.answers ? (\n            <>\n              <ul className=\"mx-auto w-5/6 mb-10 mt-5\">\n                {this.state.answers.map((answer, i) => {\n                  return (\n                    <li\n                      onClick={(event) => {\n                        this.props.handleAnswer(\n                          answer,\n                          this.state.currentQuestion\n                        );\n                      }}\n                      key={i}\n                      className={\n                        this.props.answers[this.state.currentQuestion] ===\n                        answer\n                          ? \"mb-5 border px-3 py-2 rounded-md bg-green-900 hover:bg-green-700 text-white cursor-pointer text-left\"\n                          : \" mb-5 border px-3 py-2 rounded-md bg-green-300 hover:bg-yellow-700 cursor-pointer text-left\"\n                      }\n                    >\n                      {i + 1} : {\"   \" + answer}\n                    </li>\n                  );\n                })}\n              </ul>\n            </>\n          ) : (\n            \"\"\n          )}\n          <div>\n            {this.state.currentQuestion > 8 ? (\n              <div>\n                <button onClick={this.props.handleSubmit} \n                className=\"btn-level orange\">Submit</button>\n              </div>\n            ) : (\n              <button onClick={this.handleNext} className=\"btn-level orange\">Next</button>\n            )}\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n\nexport default Quiz;\n"]},"metadata":{},"sourceType":"module"}